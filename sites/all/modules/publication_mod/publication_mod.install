<?php
// Copyright FORTH-ICS, Emmanouil Dermitzakis
/**
 * @file
 * publication_mod.install
 * Install, uninstall, and update functions for publication_mod.module.
 */

 /**
  * Implements of hook_install().
  */
function publication_mod_install(){
  $fields = array(
    'pub_mod_field_blazegraph_uuid' => array(
      'field_name'  => 'pub_mod_field_blazegraph_uuid',
      'type' => 'text',
      'cardinality' => 1
    )
  );

  foreach($fields as $field){
    if(!field_info_field($field['field_name'])){
      field_create_field($field);
    }
  }

  $new_folder = 'public://publication_mod_publications';
  file_prepare_directory($new_folder, FILE_CREATE_DIRECTORY);

  $nid = db_insert('publication_mod')
    ->fields(array(
      'pm_key' => 'blazegraph_url',
      'pm_value' => 'http://139.91.183.97:28001/blazegraph/namespace/press_forth_version/sparql'
    ))
    ->execute();
  $nid = db_insert('publication_mod')
    ->fields(array(
      'pm_key' => 'blazegraph_prefix',
      'pm_value' => 'http://www.ics.forth.gr/Press#'
    ))
    ->execute();
  $nid = db_insert('publication_mod')
    ->fields(array(
      'pm_key' => 'blazegraph_orgs',
      'pm_value' => ''
    ))
    ->execute();

  $html = '<!DOCTYPE html>
    <html>
    <head>
          <title>All Publications</title>
      </head>
      <body>
      <div id="all_pubs"></div>
      </body>
      </html>';
  $nid = db_insert('publication_mod')
    ->fields(array(
      'pm_key' => 'all_pubs',
      'pm_value' => $html
    ))
    ->execute();
}

/**
 * Implementation of hook_uninstall().
 */

function publication_mod_uninstall() {

  // Delete fields
  $fields = array(
    'pub_mod_field_blazegraph_uuid',
    'pub_mod_field_file',
    'pub_mod_field_organization',
    'pub_mod_field_first_name',
    'pub_mod_field_last_name',
    'pub_mod_field_add_to_blzg',
  );

  foreach($fields as $field){
    field_delete_field($field);
  }

  user_role_delete('Publication Mod Power User');

  menu_rebuild();
}

/**
 * Implements hook_schema().
 *
 * Defines the database table used by this module.
 * @see hook_schema()
 */

function publication_mod_schema(){
  $schema['publication_mod'] = array(
    'description' => 'Stores all the info for the publication_mod setting.',
    'fields' => array(
      'pm_key' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Primary Key. Value name'
      ),
      'pm_value' => array(
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
        'description' => 'Value'
      )
    ),
    'primary key' => array('pm_key')
  );

  return $schema;
}


 /**
  * Implements of hook_enable().
  */
function publication_mod_enable() {
  global $user;
  $user_edit = array();
  field_info_cache_clear();
  // Check if our field is not already created.


  if (!field_info_field('pub_mod_field_first_name')) {
    $field = array(
      'field_name' => 'pub_mod_field_first_name',
      'type' => 'text',
    );
    field_create_field($field);

  }
    // Create the instance on the bundle.
  if(!field_info_instance('user', 'pub_mod_field_first_name', 'user')){
    $instance = array(
      'field_name' => 'pub_mod_field_first_name',
      'entity_type' => 'user',
      'label' => 'First Name',
      'bundle' => 'user',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => TRUE,
      'settings' => array(
        // Here you inform either or not you want this field showing up on the registration form.
        'user_register_form' => 1,
      ),
      'widget' => array(
        'type' => 'textfield',
        'weight' => '1',
      ),
    );
    field_create_instance($instance);

    // $user->pub_mod_field_first_name['und'][0]['value'] = "John";
    $user_edit['pub_mod_field_first_name'] = array(
      'und' => array(
        0 => array(
          'value' => 'John',
        ),
      ),
    );
  }
  // Check if our field is not already created.
  if (!field_info_field('pub_mod_field_last_name')) {
    $field = array(
      'field_name' => 'pub_mod_field_last_name',
      'type' => 'text',
    );
    field_create_field($field);
  }
    // Create the instance on the bundle.
  if(!field_info_instance('user', 'pub_mod_field_last_name', 'user')){
    $instance = array(
      'field_name' => 'pub_mod_field_last_name',
      'entity_type' => 'user',
      'label' => 'Last Name',
      'bundle' => 'user',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => TRUE,
      'settings' => array(
        // Here you inform either or not you want this field showing up on the registration form.
        'user_register_form' => 1,
      ),
      'widget' => array(
        'type' => 'textfield',
        'weight' => '2',
      ),
    );
    field_create_instance($instance);

    // $user->pub_mod_field_last_name['und'][0]['value'] = "Doe";
    $user_edit['pub_mod_field_last_name'] = array(
      'und' => array(
        0 => array(
          'value' => 'Doe',
        ),
      ),
    );
  }

  // Check if our field is not already created.
  if (!field_info_field('pub_mod_field_organization')) {
    $field = array(
      'field_name' => 'pub_mod_field_organization',
      'type' => 'pub_mod_organization',
    );
    field_create_field($field);
  }
    // Create the instance on the bundle.

  if(!field_info_instance('user', 'pub_mod_field_organization', 'user')){
    $instance = array(
      'field_name' => 'pub_mod_field_organization',
      'entity_type' => 'user',
      'label' => 'Laboratory',
      'bundle' => 'user',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => TRUE,
      'settings' => array(
        // Here you inform either or not you want this field showing up on the registration form.
        'user_register_form' => 1,
      ),
      'widget' => array(
        'weight' => '3',
      ),
    );
    field_create_instance($instance);
  }

  if(!field_info_field('pub_mod_field_blazegraph_uuid')){
    $field = array(
          'field_name'  => 'pub_mod_field_blazegraph_uuid',
          'type' => 'text',
          'cardinality' => 1
    );
    field_create_field($field);
  }
  if(!field_info_instance('user', 'pub_mod_field_blazegraph_uuid', 'user')){
    $instance = array(
      'field_name' => 'pub_mod_field_blazegraph_uuid',
      'entity_type' => 'user',
      'label' => 'Blazegraph UUID',
      'bundle' => 'user',
      'required' => FALSE,
      'settings' => array(
        'user_register_form' => 0
      ),
      'widget' => array(
        'type' => 'textfield',
        'weight' => '4'
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    );
    field_create_instance($instance);
  }

  // Check if our field is not already created.
  if (!field_info_field('pub_mod_field_add_to_blzg')) {
    $field = array(
      'field_name' => 'pub_mod_field_add_to_blzg',
      'type' => 'list_boolean',
      'settings' => array(
        'allowed_values' => array(
          0 => '',
          1 => '',
        )
      )
    );
    field_create_field($field);

  }
  // Create the instance on the bundle.
  if(!field_info_instance('user', 'pub_mod_field_add_to_blzg', 'user')){
    $instance = array(
      'field_name' => 'pub_mod_field_add_to_blzg',
      'entity_type' => 'user',
      'label' => 'Add user to Publication Mod Blazegraph DB',
      'bundle' => 'user',
      'required' => 0,
      'settings' => array(
        // Here you inform either or not you want this field showing up on the registration form.
        'user_register_form' => 1,
      ),
      'widget' => array(
        'weight' => '4',
        'type' => 'options_onoff',
        'settings' => array(
          'display_label' => 1,
        ),
      ),
      'default_value' => array(array('value' => 1)),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    );
    field_create_instance($instance);
  }

  if (empty(user_role_load_by_name('Publication Mod Power User'))){
    $role = new stdClass();
    $role->name = 'Publication Mod Power User';
    user_role_save($role);
  }

  $role = user_role_load_by_name('Publication Mod Power User');
  if(!in_array('Publication Mod Power User', $user->roles)){
    user_multiple_role_edit(array($user->uid), 'add_role', $role->rid);
  }

  user_save($user, $user_edit);
}
